#nuvla-ui-sidebar {
    z-index: 1000;
    overflow: hidden;
    overflow-y: auto;
}

#nuvla-ui-sidebar:after {
    background-image: url(/ui/images/mountains.jpg);
    background-color: black;
    background-repeat: no-repeat;
    z-index: -1;
    opacity: 0.5;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    position: fixed;
    width: inherit;
    height: 100vh;
    visibility: unset;
}

/*
  Allows the container to scroll with overview in the x-direction.  Usually
  put on a Container to take advantage of the automatic width calculation of
  the Semantic UI Container.
*/
.nuvla-ui-x-autoscroll {
    overflow-x: auto;
}

#nuvla-ui-main {
    display: flex !important; /* will be block without !important */
    flex-direction: column;
    background-color: #f5f5f5 !important;
}

/*
  Main panel for the content.  This will expand vertically as
  needed to force the footer to the bottom of the page.
*/

#nuvla-ui-content {
    padding: 1ex;
    min-height: calc(100vh - 85px);
}

.nuvla-ui-header {
    height: 30px;
    border-radius: unset !important;
}

.nuvla-ui-section-header {
    background-color: Gainsboro !important;
}


/*
 * Override the size of inputs within a search dropdown to avoid
 * weird interaction effects where the focus passes to the dropdown
 * rather than the search input field.
 *
 * This is not a perfect solution as the input field for the search
 * will take up the entire line, even if the existing items are
 * short.
 */

div.search.dropdown > input {
    width: 100% !important;
}

.ui.styled.accordion > .active.title {
    background-color: lightgrey;
}

/*
 * Misc
 */

.nuvla-command {
    font-family: "Courier New", Courier, monospace;
}

.react-datepicker-popper {
    z-index: 11 !important;
}

.cm-s-logger {
    background: transparent !important;
}