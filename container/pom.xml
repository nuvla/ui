<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>container-dep</artifactId>
  <packaging>pom</packaging>
  <name>ui/container</name>
  <url>http://sixsq.com</url>

  <parent>
    <groupId>sixsq.nuvla.ui</groupId>
    <artifactId>parent</artifactId>
    <version>2.27.1-SNAPSHOT</version>
  </parent>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>sixsq.nuvla.ui</groupId>
      <artifactId>code</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>default TRAVIS_BRANCH value</id>
      <activation>
        <property>
          <name>!env.TRAVIS_BRANCH</name>
        </property>
      </activation>
      <properties>
        <env.TRAVIS_BRANCH></env.TRAVIS_BRANCH>
      </properties>
    </profile>
    <profile>
      <id>default TRAVIS_PULL_REQUEST_BRANCH value</id>
      <activation>
        <property>
          <name>!env.TRAVIS_PULL_REQUEST_BRANCH</name>
        </property>
      </activation>
      <properties>
        <env.TRAVIS_PULL_REQUEST_BRANCH></env.TRAVIS_PULL_REQUEST_BRANCH>
      </properties>
    </profile>
  </profiles>

  <build>
    <plugins>

      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>git-information</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>true</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.directory}/git.properties</generateGitPropertiesFilename>
          <format>properties</format>
          <skipPoms>false</skipPoms>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>recover true branch name</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>git.branch.selected</name>
              <value>${env.TRAVIS_PULL_REQUEST_BRANCH}%${env.TRAVIS_BRANCH}%${git.branch}</value>
              <regex>^%*([^%]+).*$</regex>
              <replacement>$1</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
          <execution>
            <id>convert branch name to valid docker repository name</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>git.branch.sanitized</name>
              <value>${git.branch.selected}</value>
              <regex>[^a-z0-9\._-]</regex>
              <replacement>-</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
          <execution>
            <id>set docker tag property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>docker-tag</name>
              <value>${project.version}</value>
              <regex>^.*SNAPSHOT$</regex>
              <replacement>${git.branch.sanitized}</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
          <execution>
            <id>set docker organization property</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>docker-organization</name>
              <value>${project.version} nuvladev nuvla</value>
              <regex>(?=.*SNAPSHOT).*(nuvladev).*|.*(nuvla).*</regex>
              <replacement>$1$2</replacement>
              <failIfNoMatch>false</failIfNoMatch>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>expand-ui</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>sixsq.nuvla.ui</groupId>
                  <artifactId>code</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/dependency/ui</outputDirectory>
                  <includes>**/public/**/*</includes>
                  <excludes>**/*.edn,**/*.graffle</excludes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>precompress-files</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>find</executable>
          <workingDirectory>${project.build.directory}/dependency/ui</workingDirectory>
          <arguments>
            <argument>${project.build.directory}/dependency/ui</argument>
            <argument>-type</argument>
            <argument>f</argument>
            <argument>-a</argument>
            <argument>-not</argument>
            <argument>-name</argument>
            <argument>*.woff*</argument>
            <argument>-a</argument>
            <argument>-not</argument>
            <argument>-name</argument>
            <argument>version.css</argument>
            <argument>-a</argument>
            <argument>-not</argument>
            <argument>-name</argument>
            <argument>config.json</argument>
            <argument>-a</argument>
            <argument>-not</argument>
            <argument>-name</argument>
            <argument>nuvla-logo.png</argument>
            <argument>-exec</argument>
            <argument>zopfli</argument>
            <argument>{}</argument>
            <argument>;</argument>
          </arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.10</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>docker.io/${docker-organization}/ui</repository>
          <tag>${docker-tag}</tag>
          <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
          <buildArgs>
            <GIT_BRANCH>${git.branch.selected}</GIT_BRANCH>
            <GIT_COMMIT_ID>${git.commit.id}</GIT_COMMIT_ID>
            <GIT_DIRTY>${git.dirty}</GIT_DIRTY>
            <GIT_BUILD_TIME>${git.build.time}</GIT_BUILD_TIME>
            <TRAVIS_BUILD_NUMBER>${env.TRAVIS_BUILD_NUMBER}</TRAVIS_BUILD_NUMBER>
            <TRAVIS_BUILD_WEB_URL>${env.TRAVIS_BUILD_WEB_URL}</TRAVIS_BUILD_WEB_URL>
          </buildArgs>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
